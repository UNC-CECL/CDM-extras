#### Directories
parent_dir <- getwd() ## change as necessary
parent_dir
#### Load Functions
source('CDM_plotting_functions.R')
#### Directories
parent_dir <- getwd() ## change as necessary
sub_dir <- 'Example_Batch_CDM_Simulation' ## change as necessary
dir <- paste0(parent_dir, sub_dir)
## Timeseries Plots
# Max Dune Height
batch_CDM_df<-batch.CDM.df(dir, pattern = '^h.*')
n<-names(batch_CDM_df)
#### Load Functions
source('CDM_plotting_functions.R')
## Timeseries Plots
# Max Dune Height
batch_CDM_df<-batch.CDM.df(dir, pattern = '^h.*')
dir
dir <- paste0(parent_dir, sub_dir, sep='/')
## Timeseries Plots
# Max Dune Height
batch_CDM_df<-batch.CDM.df(dir, pattern = '^h.*')
dir
dir <- paste(parent_dir, sub_dir, sep='/')
## Timeseries Plots
# Max Dune Height
batch_CDM_df<-batch.CDM.df(dir, pattern = '^h.*')
n<-names(batch_CDM_df)
p1 <- batch.CDM.summary.plot(subset(batch_CDM_df, subset=replicate==1, ylab=), n[6], ylab = "Maximum Dune Elevation (m)")
# Veg Cover
batch_CDM_df<-batch.CDM.df(dir, pattern = '^veget_x.*')
n<-names(batch_CDM_df)
p2 <- batch.CDM.summary.plot(subset(batch_CDM_df, subset=replicate==1), n[6], ylab = expression("Maximum Proportional Cover"))
## Final Timepoint Plots
# Dune Height
batch_timepoint_df <- batch.timepoint.df(dir, timepoint = '170000')
n<-names(batch_timepoint_df)
p3 <- batch.CDM.timepoint.plot(subset(batch_timepoint_df, subset=replicate==1), n[6])
# Veg Cover
batch_timepoint_df <- batch.timepoint.df(dir, timepoint = '170000', pattern = "^veget_x.")
n<-names(batch_timepoint_df)
p4 <- batch.CDM.timepoint.plot(subset(batch_timepoint_df, subset=replicate==1), n[6], ylab = "Vegetation Proportional Cover")
p5 <- grid.arrange(p1, p2, p3, p4, nrow = 2)
p5
p5
grid.arrange(p1, p2, p3, p4, nrow = 2)
#### 3D animation ####
p <- CDM.plotly(dir = paste(dir, 'model_iter2', sep='/'))
p
